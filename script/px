#!/bin/bash

# Author : Steven.zhang (steven.zhang031@gmail.com)
# File   : n
# Version: 0.1
# Some network utilities. Such as enable/disable proxy for different dev tools.

###BEGIN###
#--------------------------------------------------------------------------------
# Network Utilities
# Version: 0.1
# Author : Steven.zhang (steven.zhang031@gmail.com)
#--------------------------------------------------------------------------------
# SYNOPSIS
#
# ./n -p [y|n]       : Enable or Disable proxy
# ./n -i             : Show current Configuration
#
#--------------------------------------------------------------------------------
#
###END###
#export http_proxy=http://www-proxy.us.oracle.com:80
#export https_proxy=http://www-proxy.us.oracle.com:80
#export no_proxy=*.oracle.com,*.oraclecorp.com,slc10vfs,localhost,bot-*

WORKSPACE=`pwd`
SELF="$0"

HTTP_PROXY="http://www-proxy.us.oracle.com:80"
HTTPS_PROXY="http://www-proxy.us.oracle.com:80"

# FORMAT:
# DESCRIPTION~ENABLE KEY~DISABLE COMMAND~VALIDATE COMMAND
#
CMDS=(
    "Git Configuration~sed -i '' 's/#proxy/proxy/g' ${HOME}/.gitconfig~sed -i '' 's/proxy =.*/#&/g' ${HOME}/.gitconfig~grep 'proxy' ${HOME}/.gitconfig"
    "Terminal Configuration~sed -i '' 's/#export http/export http/g' ${HOME}/.myenv~sed -i '' 's/export http.*/#&/g' ${HOME}/.myenv~grep 'export http' ${HOME}/.myenv"
#   "Terminal No Proxy~sed -i '' 's/#export no_proxy/export no_proxy/g' ${HOME}/.myenv~sed -i '' 's/export no_proxy.*/#&/g' ${HOME}/.myenv~grep 'export no_proxy' ${HOME}/.myenv"
#   "Atom Configuration~apm config set http-proxy 'http://www-proxy.us.oracle.com:80';apm config set https-proxy 'http://www-proxy.us.oracle.com:80'~apm config set http-proxy null;apm config set https-proxy null~apm config get http-proxy;apm config get https-proxy"
)

RCol='\e[0m'    # Text Reset

# Regular           Bold                Underline           High Intensity      BoldHigh Intens     Background          High Intensity Backgrounds
Bla='\e[0;30m';     BBla='\e[1;30m';    UBla='\e[4;30m';    IBla='\e[0;90m';    BIBla='\e[1;90m';   On_Bla='\e[40m';    On_IBla='\e[0;100m';
Red='\e[0;31m';     BRed='\e[1;31m';    URed='\e[4;31m';    IRed='\e[0;91m';    BIRed='\e[1;91m';   On_Red='\e[41m';    On_IRed='\e[0;101m';
Gre='\e[0;32m';     BGre='\e[1;32m';    UGre='\e[4;32m';    IGre='\e[0;92m';    BIGre='\e[1;92m';   On_Gre='\e[42m';    On_IGre='\e[0;102m';
Yel='\e[0;33m';     BYel='\e[1;33m';    UYel='\e[4;33m';    IYel='\e[0;93m';    BIYel='\e[1;93m';   On_Yel='\e[43m';    On_IYel='\e[0;103m';
Blu='\e[0;34m';     BBlu='\e[1;34m';    UBlu='\e[4;34m';    IBlu='\e[0;94m';    BIBlu='\e[1;94m';   On_Blu='\e[44m';    On_IBlu='\e[0;104m';
Pur='\e[0;35m';     BPur='\e[1;35m';    UPur='\e[4;35m';    IPur='\e[0;95m';    BIPur='\e[1;95m';   On_Pur='\e[45m';    On_IPur='\e[0;105m';
Cya='\e[0;36m';     BCya='\e[1;36m';    UCya='\e[4;36m';    ICya='\e[0;96m';    BICya='\e[1;96m';   On_Cya='\e[46m';    On_ICya='\e[0;106m';
Whi='\e[0;37m';     BWhi='\e[1;37m';    UWhi='\e[4;37m';    IWhi='\e[0;97m';    BIWhi='\e[1;97m';   On_Whi='\e[47m';    On_IWhi='\e[0;107m';

printSig()
{
    printf "${BICya}$1${RCol}\n"
}

printInfo()
{
    printf "${BIYel}$1${RCol}\n"
}

printError()
{
    printf "${BIRed}$1${RCol}\n"
}

printSuccess()
{
    printf "${BIGre}$1${RCol}\n"
}

usage()
{
    _BEGIN_LINE=`grep -n "###BEGIN###" ${SELF} | sed -n 1p | awk -F':' '{print $1}'`
    _END_LINE=`grep -n "###END###" ${SELF} | sed -n 1p |  awk -F':' '{print $1}'`

    _BEGIN_LINE=`expr $_BEGIN_LINE + 1`
    _END_LINE=`expr $_END_LINE - 1`

    sed -n "${_BEGIN_LINE},${_END_LINE}p" ${SELF} | cut -c2-

    echo ""
}

hr() {
  local start=$'\e(0' end=$'\e(B' line='qqqqqqqqqqqqqqqq'
  local cols=${COLUMNS:-$(tput cols)}
  while ((${#line} < cols)); do line+="$line"; done
  printf '%s%s%s\n' "$start" "${line:0:cols}" "$end"
}

if [ $# -lt 1 ]
then
    usage
    exit
fi

OPTIND=1
while getopts ":p:i" opt; do
    case "$opt" in
        p)
            for _ITEM in "${CMDS[@]}"; do
                _DESC=`echo $_ITEM | awk -F'~' '{print $1}'`
                _YES=`echo $_ITEM | awk -F'~' '{print $2}'`
                _NO=`echo $_ITEM | awk -F'~' '{print $3}'`
                _VALIDATE=`echo $_ITEM | awk -F'~' '{print $4}'`

                case "$OPTARG" in
                    y|Y|yes|YES|Yes)
                        printSig "Enable Proxy -> ${_DESC}"
                        #sed -i "" "${_YES}" ${_FILE}
                        eval ${_YES}
                        ;;
                    n|N|no|NO|No)
                        printSig "Disable Proxy -> ${_DESC}"
                        #sed -i "" "${_NO}" ${_FILE}
                        eval ${_NO}
                        ;;
                    *)
                        printSig "Enable Proxy -> ${_DESC}"
                        eval ${_YES}
                        ;;
                esac
                
                #grep "${_VALIDATE}" ${_FILE}
                eval ${_VALIDATE}
                hr
            done

            printError "Don't forget to restart terminal to make the changes effect."
        ;;
        i)
            printSig "[ The Current Configurations ]"
            for _ITEM in "${CMDS[@]}"; do
                _DESC=`echo $_ITEM | awk -F'~' '{print $1}'`
                _VALIDATE=`echo $_ITEM | awk -F'~' '{print $4}'`

                printInfo "${_DESC}"
                eval ${_VALIDATE}
            done
        ;;

        \?)
            usage
            exit 1
        ;;
    esac
done
