---
- name: Setup Mac OS Workspace
  hosts: localhost
  connection: local
  # gather_facts: false
  vars:
    node_version: "24"
    # Default to Intel path
    fish_shell_path: /usr/local/bin/fish
  tasks:
    - name: Ensure Homebrew is installed
      homebrew:
        name: brew
        state: present
      tags:
        - homebrew
        - setup

    # nodejs -----------------------------------------------------------------------------
    - name: Install Volta via Homebrew
      homebrew:
        name: volta
        state: present
      tags:
        - volta
        - nodejs

    - name: Install Node.js via Volta
      shell: volta install node@{{ node_version }}
      args:
        creates: "{{ lookup('env','HOME') }}/.volta/tools/image/node/{{ node_version }}.*/"
      tags:
        - volta
        - nodejs

    - name: Install pnpm via Volta
      shell: volta install pnpm
      args:
        creates: "{{ lookup('env','HOME') }}/.volta/tools/image/packages/pnpm"
      tags:
        - volta
        - pnpm
    
    - name: Run pnpm setup (force global bin dir setup)
      shell: pnpm setup
      args:
        creates: "{{ lookup('env','HOME') }}/.pnpm"
      tags: [pnpm, pnpm_setup]

    - name: Ensure ~/.pnpm directory exists
      file:
         path: "{{ lookup('env','HOME') }}/.pnpm"
         state: directory
         mode: '0755'
      tags: [pnpm, pnpm_setup]

    - name: Install Claude Code globally with pnpm
      shell: pnpm install -g @anthropic-ai/claude-code
      args:
        creates: "{{ lookup('env','HOME') }}/.volta/tools/image/packages/claude-code"
      tags:
        - ai
        - claude

    # --- Apps ---
    - name: Install AltTab and Rectangle
      homebrew:
        name:
          - alt-tab
          - rectangle
        state: present
      tags:
        - apps
        - alttab
        - rectangle

    # --- Shell ---
    - name: Adjust Fish shell path for Apple Silicon
      set_fact:
        fish_shell_path: /opt/homebrew/bin/fish
      when: ansible_architecture == "arm64"
      tags:
        - shell
        - fish_path

    - name: Install Fish shell
      homebrew:
        name: fish
        state: present
      tags:
        - shell
        - fish
    
    - name: Source custom env file in Fish
      lineinfile:
        path: "{{ lookup('env','HOME') }}/.config/fish/config.fish"
        line: "source $HOME/.myenv"
        state: present
      tags: [fish, env]

    - name: Source aliases file in Fish
      lineinfile:
        path: "{{ lookup('env','HOME') }}/.config/fish/config.fish"
        line: "source $HOME/.aliases"
        state: present
      tags: [fish, aliases]

    - name: Change default shell to Fish
      ansible.builtin.user:
        name: "{{ lookup('env','USER') }}"
        shell: "{{ fish_shell_path }}"
      become: true
      tags:
        - shell
        - default_shell

    # --- Starship ---
    - name: Install Starship prompt
      homebrew:
        name: starship
        state: present
      tags:
        - shell
        - starship
        - starship_install

    - name: Ensure starship init in fish config
      ansible.builtin.lineinfile:
        path: "{{ lookup('env','HOME') }}/.config/fish/config.fish"
        line: "starship init fish | source"
        create: yes
        state: present
      tags:
        - shell
        - starship
        - starship_config

    # --- Fonts ---
    - name: Install Nerd Fonts (Fira Code & JetBrains Mono)
      homebrew_cask:
        name:
          - font-fira-code-nerd-font
          - font-jetbrains-mono-nerd-font
        state: present
      tags:
        - fonts
        - fira_code
        - jetbrains_mono

    # --- CLI tools ---
    - name: Install fzf
      homebrew:
        name: fzf
        state: present
      tags: [cli, fzf]

    - name: Install bat
      homebrew:
        name: bat
        state: present
      tags: [cli, bat]

    - name: Install httpie
      homebrew:
        name: httpie
        state: present
      tags: [cli, httpie]

    - name: Install curl
      homebrew:
        name: curl
        state: present
      tags: [cli, curl]

    - name: Install tmux
      homebrew:
        name: tmux
        state: present
      tags: [cli, tmux]

    - name: Install lazygit
      homebrew:
        name: lazygit
        state: present
      tags: [cli, lazygit]

    - name: Install jq
      homebrew:
        name: jq
        state: present
      tags: [cli, jq]

    - name: Install wget
      homebrew:
        name: wget
        state: present
      tags: [cli, wget]

    - name: Install zoxide
      homebrew:
        name: zoxide
        state: present
      tags: [cli, zoxide]

    - name: Install fd
      homebrew:
        name: fd
        state: present
      tags: [cli, fd]

    - name: Install ripgrep
      homebrew:
        name: ripgrep
        state: present
      tags: [cli, ripgrep]

    - name: Tap wouterdebie/repo for i2cssh
      homebrew_tap:
        tap: wouterdebie/repo
        state: present
      tags: [cli, i2cssh]

    - name: Install i2cssh
      homebrew:
        name: wouterdebie/repo/i2cssh
        state: present
      tags: [cli, i2cssh]

    # --- Bun ---
    - name: Tap oven-sh/bun repository
      homebrew_tap:
        tap: oven-sh/bun
        state: present
      tags: [bun, tap]

    - name: Install Bun
      homebrew:
        name: oven-sh/bun/bun
        state: present
      tags:
        - bun
        - bun_install

    # --- python ---
    - name: Ensure uv installer script is run
      shell: curl -LsSf https://astral.sh/uv/install.sh | sh
      args:
        creates: "{{ lookup('env','HOME') }}/.local/bin/uv"
      environment:
        HOME: "{{ lookup('env','HOME') }}"
      tags: [python, uv]

    - name: Verify uv command is available
      command: uv --version
      register: uv_check
      ignore_errors: yes
      tags: [python, uv]
